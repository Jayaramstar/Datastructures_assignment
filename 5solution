package datastructures;
import java.util.Scanner;

class ListNode {
    int data;
    ListNode next;

    public ListNode(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    ListNode head;

    public LinkedList() {
        this.head = null;
    }

    public void insert(int data) {
        ListNode newNode = new ListNode(data);
        if (head == null) {
            head = newNode;
        } else {
            ListNode current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public void printList() {
        ListNode current = head;
        while (current != null) {
            System.out.print(current.data + "->");
            current = current.next;
        }
        System.out.println("null");
    }
}

public class MergeAndSortLinkedList {
    public static LinkedList mergeAndSort(LinkedList list1, LinkedList list2) {
        LinkedList mergedList = new LinkedList();

        ListNode current1 = list1.head;
        ListNode current2 = list2.head;

        while (current1 != null && current2 != null) {
            if (current1.data <= current2.data) {
                mergedList.insert(current1.data);
                current1 = current1.next;
            } else {
                mergedList.insert(current2.data);
                current2 = current2.next;
            }
        }

        while (current1 != null) {
            mergedList.insert(current1.data);
            current1 = current1.next;
        }

        while (current2 != null) {
            mergedList.insert(current2.data);
            current2 = current2.next;
        }

        return mergedList;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        LinkedList list1 = new LinkedList();
        System.out.print("Enter the number of elements in Linked List 1: ");
        int n1 = scanner.nextInt();
        System.out.println("Enter the elements of Linked List 1:");

        for (int i = 0; i < n1; i++) {
            list1.insert(scanner.nextInt());
        }

        LinkedList list2 = new LinkedList();
        System.out.print("Enter the number of elements in Linked List 2: ");
        int n2 = scanner.nextInt();
        System.out.println("Enter the elements of Linked List 2:");

        for (int i = 0; i < n2; i++) {
            list2.insert(scanner.nextInt());
        }

        scanner.close();

        LinkedList mergedList = mergeAndSort(list1, list2);

        System.out.print("Merged and Sorted Linked List: ");
        mergedList.printList();
    }
}
