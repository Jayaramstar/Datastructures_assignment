package datastructures;
import java.util.HashSet;
import java.util.Scanner;

class ListNode {
    int data;
    ListNode next;

    public ListNode(int data) {
        this.data = data;
        this.next = null;
    }
}

class MyLinkedList {
    ListNode head;

    public MyLinkedList() {
        this.head = null;
    }

    public void insert(int data) {
        ListNode newNode = new ListNode(data);
        if (head == null) {
            head = newNode;
        } else {
            ListNode current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }

    public void removeDuplicates() {
        HashSet<Integer> set = new HashSet<>();
        ListNode current = head;
        ListNode prev = null;

        while (current != null) {
            if (set.contains(current.data)) {
                prev.next = current.next;
            } else {
                set.add(current.data);
                prev = current;
            }
            current = current.next;
        }
    }

    public void printList() {
        ListNode current = head;
        while (current != null) {
            System.out.print(current.data + "->");
            current = current.next;
        }
        System.out.println("null");
    }
}

public class RemoveDuplicatesFromLinkedList {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        MyLinkedList myList = new MyLinkedList();

        System.out.print("Enter the number of elements in the Linked List: ");
        int n = scanner.nextInt();
        System.out.println("Enter the elements of the Linked List:");

        for (int i = 0; i < n; i++) {
            myList.insert(scanner.nextInt());
        }

        scanner.close();

        System.out.print("Original Linked List: ");
        myList.printList();

        myList.removeDuplicates();

        System.out.print("Linked List after removing duplicates: ");
        myList.printList();
    }
}
